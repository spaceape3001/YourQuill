////////////////////////////////////////////////////////////////////////////////
//
//  YOUR QUILL
//
////////////////////////////////////////////////////////////////////////////////

#include "Rendered.hpp"
#include "RenderedInfoWriter.hpp"
#include <basic/DelayInit.hpp>
#include <basic/meta/Init.hpp>

namespace yq {
    namespace engine {

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        RenderedInfo::RenderedInfo(std::string_view name, ObjectInfo& base, const std::source_location& sl) : 
            ObjectInfo(name, base, sl)
        {
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        Rendered::Rendered()
        {
            static std::atomic<uint64_t>    next = { 0 };
            m_id        = ++next;
            m_revision  = 0;
        }
        
        Rendered::Rendered(const Rendered&) : Rendered()
        {
        }

        Rendered::~Rendered()
        {
        }

        void    Rendered::changed()
        {
            ++m_revision;
        }
        
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        
        YQ_INVOKE(
            [[maybe_unused]] auto rend   = writer<Rendered>();
        )
    }
}

YQ_OBJECT_IMPLEMENT(yq::engine::Rendered)
