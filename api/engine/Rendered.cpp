////////////////////////////////////////////////////////////////////////////////
//
//  YOUR QUILL
//
////////////////////////////////////////////////////////////////////////////////

#include "Rendered.hpp"
#include "RenderedInfoWriter.hpp"
#include <basic/DelayInit.hpp>
#include <basic/meta/Init.hpp>
#include <atomic>

namespace yq {

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    RenderedInfo::RenderedInfo(std::string_view name, ObjectInfo& base, const std::source_location& sl) : 
        ObjectInfo(name, base, sl)
    {
        set_option(RENDERED);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    Rendered::Rendered()
    {
        m_revision  = 0;
    }
    
    Rendered::Rendered(const Rendered&) : Rendered()
    {
    }

    Rendered::~Rendered()
    {
    }

    void    Rendered::changed()
    {
        ++m_revision;
    }
    
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
    YQ_INVOKE(
        auto rend   = writer<Rendered>();
        rend.property("id", &Rendered::id);
    )
}

YQ_OBJECT_IMPLEMENT(yq::Rendered)
